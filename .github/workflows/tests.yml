# Workflow for testing Spoon.
#
# Note that actions are specified by commit hash. This is to avoid the security
# risk of someone injecting malicious code into a release and then simply
# changing a tag.

name: tests
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
  schedule:
  - cron: "0 0 * * *"

env:
  JAVA_DISTRIBUTION: temurin

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        java: [11, 17]
        os: [ubuntu-latest, windows-latest]
        exclude:
          - os: windows-latest
            java: 17


    env:
      MAVEN_OPTS: -Djava.src.version=${{ matrix.java }} -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false

    name: Tests with Java ${{ matrix.java }} on ${{ matrix.os }}
    steps:
      - name: Disable Git's autocrlf
        run: git config --global core.autocrlf false
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2
      - uses: actions/setup-java@a18c333f3f14249953dab3e186e5e21bf3390f1d # tag=v3.5.1
        with:
          java-version: ${{ matrix.java }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Get date for cache # see https://github.com/actions/cache README
        id: get-date
        run: echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
        shell: bash
      - name: Use Maven dependency cache
        uses: actions/cache@fd5de65bc895cf536527842281bea11763fefd77 # tag=v3.0.8
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ steps.get-date.outputs.date }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Use silent log config
        run: mv chore/logback.xml src/test/resources/
      - name: Build
        run: |
          mvn -B test-compile
      - name: Fetch final dependencies
        # this is a hack to download the final test dependencies required to actually run the tests
        run: timeout 20 mvn -B test || echo "Done fetching dependencies"
        shell: bash
      - name: Test
        run: 
          mvn test
      - name: print run tests
        run: cat testResults.spoon
  coverage:
    runs-on: ubuntu-latest
    env:
      MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false
    name: Test with coverage
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2
      - uses: actions/setup-java@a18c333f3f14249953dab3e186e5e21bf3390f1d # tag=v3.5.1
        with:
          java-version: 17
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Get date for cache # see https://github.com/actions/cache README
        id: get-date
        run: echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
        shell: bash
      - name: Use Maven dependency cache
        uses: actions/cache@fd5de65bc895cf536527842281bea11763fefd77 # tag=v3.0.8
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ steps.get-date.outputs.date }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Use silent log config
        run: mv chore/logback.xml src/test/resources/
      - name: Build
        run: |
          mvn -B test-compile
      - name: Test with coverage
        run: mvn -Pcoveralls test jacoco:report coveralls:report -DrepoToken=$GITHUB_TOKEN -DserviceName=github -DpullRequest=$PR_NUMBER --fail-never
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.number }}

  extra:
    runs-on: ubuntu-latest
    env:
      MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false
    name: Extra checks
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@a18c333f3f14249953dab3e186e5e21bf3390f1d # tag=v3.5.1
        with:
          java-version: 17
          distribution: ${{ env.JAVA_DISTRIBUTION }}
      - uses: actions/setup-python@b55428b1882923874294fa556849718a1d7f2ca5 # tag=v4.2.0
        with:
          python-version: 3.6

      - name: Get date for cache # see https://github.com/actions/cache README
        id: get-date
        run: echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
        shell: bash
      - name: Use Maven dependency cache
        uses: actions/cache@fd5de65bc895cf536527842281bea11763fefd77 # tag=v3.0.8
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ steps.get-date.outputs.date }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Use silent log config
        run: mv chore/logback.xml src/test/resources/
      - name: Run extra checks
        run: ./chore/ci-extra.sh
      - name: Run Javadoc quality check
        run: ./chore/check-javadoc-regressions.py COMPARE_WITH_MASTER

  code-quality: # we create a new step here because qodana analyzer takes around 10min
    runs-on: ubuntu-latest
    env:
      MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false
      QODANA_LINTER: jetbrains/qodana-jvm-community@sha256:c388ddd7b852296f71b1a786d3b30f458a993eb252d5cd4963422007e5b824db
    name: code-quality qodana
    steps:
      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2
        with:
          path: pull_request
      - uses: actions/setup-java@a18c333f3f14249953dab3e186e5e21bf3390f1d # tag=v3.5.1
        with:
          java-version: 17
          distribution: ${{ env.JAVA_DISTRIBUTION }}
      - name: git reset
        run: cd pull_request && git fetch && git reset --soft origin/master
      - name: Qodana - Code Inspection
        uses: JetBrains/qodana-action@ab695492d98902c49b33382782175107ec63ca28 # tag=v2022.2.1
        with:
          linter: ${{ env.QODANA_LINTER }}
          project-dir: "${{ github.workspace }}/pull_request"
          inspected-dir: ./src/main/java # only main spoon project at first
          results-dir:  "${{ github.workspace }}/result"
          changes: true
          fail-threshold: 0
          use-annotations: false
          use-caches: false # we disable cache for consistent results
      - uses: github/codeql-action/upload-sarif@b398f525a5587552e573b247ac661067fafa920b # tag=v2
        if: always()
        with:
          sarif_file: "${{ github.workspace }}/result/qodana.sarif.json"

  reproducible-builds:
    runs-on: ubuntu-latest
    env:
      MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false
    name: reproducible-builds
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@a18c333f3f14249953dab3e186e5e21bf3390f1d # tag=v3.5.1
        with:
          java-version: 17
          distribution: ${{ env.JAVA_DISTRIBUTION }}
      - name: Check status
        run: chore/check-reproducible-builds.sh
