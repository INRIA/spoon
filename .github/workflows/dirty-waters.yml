name: Dirty Waters Analysis

on:
  pull_request:
    paths:
      - "**/package.json"
      - "**/package-lock.json"
      - "**/yarn.lock"
      - "**/pnpm-lock.yaml"
      - "**/pom.xml"
  push:
    branches:
      - main
      - master
      #paths:
      #- "**/package.json"
      #- "**/package-lock.json"
      #- "**/yarn.lock"
      #- "**/pnpm-lock.yaml"
      #- "**/pom.xml"

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Dirty Waters database
        uses: actions/cache@v4
        with:
          path: tool/cache
          key: ${{ runner.os }}-dirty-waters-cache-${{ github.repository }}
          restore-keys: |
            ${{ runner.os }}-dirty-waters-cache-

      - name: Check if first dirty-waters run
        id: check-first-run
        run: |
          # Check if this workflow has run before
          RUNS=$(gh api repos/${{ github.repository }}/actions/workflows/${{ github.workflow }}/runs --jq '.total_count')
          echo "is_first_run=$([[ $RUNS -le 1 ]] && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Static Dirty Waters analysis
        if: steps.check-first-run.outputs.is_first_run == 'true'
        uses: chains-project/dirty-waters-action@41bbaa9ecbaefa6448ef95795d27b4ce4ae8086c
        with:
          # example args, change as needed
          project_repo: ${{ github.repository }}
          differential_analysis: false
          package_manager: npm # Change this according to your project
          comment_on_commit: true # Optional: comments on commits (outside PRs) if high severity issues are found
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Differential Dirty Waters Analysis
        if: ${{ !(steps.check-first-run.outputs.is_first_run == 'true') }}
        uses: chains-project/dirty-waters-action@41bbaa9ecbaefa6448ef95795d27b4ce4ae8086c
        with:
          # example args, change as needed
          project_repo: ${{ github.repository }}
          package_manager: npm # Change this according to your project
          comment_on_commit: true # Optional: comments on commits (outside PRs) if high severity issues are found
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
