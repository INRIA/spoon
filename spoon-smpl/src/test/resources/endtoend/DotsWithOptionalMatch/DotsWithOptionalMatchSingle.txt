[name]
DotsWithOptionalMatchSingle

[contract]
using the <... P ...> dots alternative to include an optional matching of P

[patch]
@@
identifier x;
@@
a();
<...
- b(x);
+ log(x);
...>
- c();
d();

[input]
class A {
  /* skip */ void a(Object ... xs) {}
  /* skip */ void b(Object ... xs) {}
  /* skip */ void c(Object ... xs) {}
  /* skip */ void d(Object ... xs) {}

  Object x;
  Object y;
  Object z;

  void m1() {
    a();
    b(x);
    b(y);
    b(z);
    c();
    d();
  }

  void m2() {
    a();
    c();
    // call to c should be removed as patch should match even without the presence of any calls to b
    d();
  }
}


[expected]
class A {
  /* skip */ void a(Object ... xs) {}
  /* skip */ void b(Object ... xs) {}
  /* skip */ void c(Object ... xs) {}
  /* skip */ void d(Object ... xs) {}

  Object x;
  Object y;
  Object z;

  void m1() {
    a();
    log(x);
    log(y);
    log(z);
    d();
  }

  void m2() {
    a();
    // call to c should be removed as patch should match even without the presence of any calls to b
    d();
  }
}
